class SearchProductScreen extends StatefulWidget {

  const SearchProductScreen({super.key});

  @override
  State<SearchProductScreen> createState() => _SearchProductScreenState();
}

class _SearchProductScreenState extends State<SearchProductScreen> {
  @override
  Widget build(BuildContext context) {
    final productProvider = Provider.of<ProductSearchProvider>(context);
    final products = productProvider.products;


    return Scaffold(
      appBar: AppBar(
        title: Text('Product List'),
      ),
      body: Column(
        children: [
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: TextField(
              onChanged: (query) {
                productProvider.fetchProducts(query);
              },
              decoration: const InputDecoration(
                labelText: 'Search Product',
                hintText: 'Enter product name...',
                prefixIcon: Icon(Icons.search),
              ),
            ),
          ),
          Expanded(
            child: productProvider.products.isEmpty
                ? Center(child: CircularProgressIndicator(color: Colors.red,))
                : ListView.builder(
              itemCount: products.length,
              itemBuilder: (context, index) {
                return  Padding(
                  padding: const EdgeInsets.all(12.0),
                  child: Container(
                    height: 190,
                    width: 100,
                    decoration: BoxDecoration(
                      borderRadius: BorderRadius.circular(20),
                      border: Border.all(color: Colors.green)
                    ),
                    child: Column(
                      children: [

                        InkWell(
                        onTap: () {
                          Navigator.of(context).push(
                          MaterialPageRoute(
                            builder: (context) => ProductDetailScreen(
                            title: products[index].title.substring(0,18),
                            productImage: products[index].image.toString(),
                            productPrice: products[index].price,
                          //productDescription: product.description.toString(),
                          ),
                             ),
                          );
                         },
                          child: Image.network(

                            products[index].image.toString(),
                             height: 150,
                            width: 150,
                            // You can add additional properties like width, height, fit, etc.
                          ),
                        ),
                        Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Row(
                            children: [
                              Text(products[index].title.substring(0,18)),
                          Spacer(),
                              Text('\$${products[index].price.toString()}'),

                            ],
                          ),
                        )

                    ],),
                  ),
                );
                //   ListTile(
                //   title: Text(products[index].title),
                //   subtitle: Text('\$${products[index].price.toStringAsFixed(2)}'),
                // );
              },
            ),
          ),
        ],
      ),
    );
  }
}